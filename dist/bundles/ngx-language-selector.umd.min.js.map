{
  "version": 3,
  "file": "ngx-language-selector.umd.min.js",
  "sources": [
    "ng://ngx-language-selector/out/translator-component.ts",
    "ng://ngx-language-selector/out/ngx-language-selector.module.ts"
  ],
  "sourcesContent": [
    "import { Component, OnInit }      from '@angular/core';\nimport { TranslateService }       from '@ngx-translate/core';\n\n@Component({\n    selector: 'lang',\n    template: `\n        <ul id=\"lang-selector\" class=\"dropdown show dropdown-menu\">\n            <li *ngFor=\"let lang of langs\" (click)=\"selectLang($event)\"\n             class=\"lang-{{lang}} dropdown-item\" [ngClass]=\"currentLang === lang ? 'active' : ''\">\n                {{lang}}\n                <input type=\"hidden\" value=\"{{lang}}\">\n            </li>\n        </ul>`\n})\nexport class TranslatorComponent implements OnInit{\n\n    public langs;\n    public currentLang;\n    public isOpen: boolean;\n    private translator;\n    private meta;\n\n    constructor(translate: TranslateService) {\n        this.translator = translate;\n        this.langs = [\"en\", \"fr\", \"es\"];\n    }\n\n    ngOnInit() {\n        // Set the browser language as default if the lang file exists, otherwise English is set as default\n        if (this.langs.indexOf(this.translator.getBrowserLang()) > -1) {\n            this.translator.setDefaultLang(this.translator.getBrowserLang())\n            this.currentLang = this.translator.getBrowserLang();\n        } else {\n            // this language will be used as a fallback when a translation isn't found in the current language\n            this.translator.setDefaultLang('en');\n            this.currentLang = 'en';            \n        }\n        this.translator.use(this.currentLang);\n        document.documentElement.lang = this.currentLang;\n    }\n\n    private getBrowserLang() {\n      return this.translator.getBrowserLang();  \n    }\n\n    public selectLang(event) {\n        this.currentLang = event.target.children[0].value;\n        this.translator.use(this.currentLang);\n        document.documentElement.lang = this.currentLang;\n    }\n}",
    "import { NgModule }                       from '@angular/core';\nimport { CommonModule }                   from '@angular/common';\nimport { BrowserModule}                   from '@angular/platform-browser';\nimport { HttpClientModule, HttpClient}    from '@angular/common/http';\n\nimport { TranslateModule, TranslateLoader} from '@ngx-translate/core';\nimport { TranslateHttpLoader}              from '@ngx-translate/http-loader';\n\nimport { TranslatorComponent}             from './translator-component';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      },\n      isolate: true\n  }),\n  \n  ],\n  declarations: [TranslatorComponent],\n  exports: [\n    TranslateModule,\n    TranslatorComponent\n  ]\n})\nexport class NgxLanguageSelectorModule { }\n"
  ],
  "names": [
    "TranslatorComponent",
    "translate",
    "this",
    "translator",
    "langs",
    "prototype",
    "ngOnInit",
    "indexOf",
    "getBrowserLang",
    "setDefaultLang",
    "currentLang",
    "use",
    "document",
    "documentElement",
    "lang",
    "selectLang",
    "event",
    "target",
    "children",
    "value",
    "HttpLoaderFactory",
    "http",
    "TranslateHttpLoader",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "TranslateService",
    "NgxLanguageSelectorModule",
    "NgModule",
    "imports",
    "CommonModule",
    "HttpClientModule",
    "TranslateModule",
    "forRoot",
    "loader",
    "provide",
    "TranslateLoader",
    "useFactory",
    "deps",
    "HttpClient",
    "isolate",
    "declarations",
    "exports"
  ],
  "mappings": "glBAAA,IAAAA,EAAA,WAsBI,SAAJA,EAAgBC,GACRC,KAAKC,WAAaF,EAClBC,KAAKE,MAAQ,CAAC,KAAM,KAAM,aAG9BJ,EAAJK,UAAAC,SAAI,YAEgE,EAAxDJ,KAAKE,MAAMG,QAAQL,KAAKC,WAAWK,mBACnCN,KAAKC,WAAWM,eAAeP,KAAKC,WAAWK,kBAC/CN,KAAKQ,YAAcR,KAAKC,WAAWK,mBAGnCN,KAAKC,WAAWM,eAAe,MAC/BP,KAAKQ,YAAc,MAEvBR,KAAKC,WAAWQ,IAAIT,KAAKQ,aACzBE,SAASC,gBAAgBC,KAAOZ,KAAKQ,aAGjCV,EAAZK,UAAAG,eAAY,WACN,OAAON,KAAKC,WAAWK,kBAGlBR,EAAXK,UAAAU,WAAW,SAAWC,GACdd,KAAKQ,YAAcM,EAAMC,OAAOC,SAAS,GAAGC,MAC5CjB,KAAKC,WAAWQ,IAAIT,KAAKQ,aACzBE,SAASC,gBAAgBC,KAAOZ,KAAKQ,eAhD7C,GCWA,SAAAU,EAAkCC,GAChC,OAAO,IAAIC,EAAAA,oBAAoBD,iBDTjC,CAAAE,KAACC,EAAAA,UAADC,KAAA,CAAW,CACPC,SAAU,OACVC,SAAU,oZAJd,CAAAJ,KAASK,EAAAA,oBCkCT,IAAAC,EAAA,2BApBA,CAAAN,KAACO,EAAAA,SAADL,KAAA,CAAU,CACRM,QAAS,CACPC,EAAAA,aACAC,EAAAA,iBACAC,EAAAA,gBAAgBC,QAAQ,CACtBC,OAAQ,CACNC,QAASC,EAAAA,gBACTC,WAAYnB,EACZoB,KAAM,CAACC,EAAAA,aAETC,SAAS,KAIbC,aAAc,CAAC3C,GACf4C,QAAS,CACPV,EAAAA,gBACAlC"
}
